unbind C-b
set -g prefix C-a
bind C-a send-prefix

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Reload a file when it changes.
# https://unix.stackexchange.com/a/383044
set -g focus-events oN

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$HOME/.tmux/plugins/tpm/tpm'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
# set -g default-terminal "screen"
set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
set -g default-command /usr/bin/zsh
# set -g default-terminal "xterm"
set-option -sg escape-time 10
set -g status on
# set-option -g status on
set-option -g status-position top

# Taken from http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind r source-file "$HOME/.tmux.conf"

# tmux navegator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# alternatively, check file exists before sourcing it in tmux.conf
source "$HOME/miniconda3/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'
# bind-key s command-prompt -p "send pane to:"    "join-pane -t '%%'"

### .tmux.conf
set-window-option -g mode-keys vi
setw -g mode-keys vi
set-option -g mouse on
unbind p
bind p paste-buffer
# Vim style pane selection
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# vi-style copying
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# set -g @yank_selection 'primary' # 'primary' or 'secondary' or 'clipboard'
set -g @yank_selection 'clipboard' # 'primary' or 'secondary' or 'clipboard'

# due to vim-navigator we lost ctlr-l for clean terminal output below command recover it.
bind C-l send-keys 'C-l'
bind C-x setw synchronize-panes

# add weather in the status bar
# WEATHER='#(curl -s wttr.in/Madrid:Pozuelo\?format\="%%l:+%%c%%20%%t%%60%%w&period=60")'
# set -g status-interval 60
# set -g status-right "$WEATHER#[fg=colour7]#[bg=colour7] #[fg=colour2]#(~/dotfiles/tmux_scripts/uptime.sh) #[fg=colour1]#[fg=colour3]#[bg=colour3]#[fg=colour0] #(~/dotfiles/tmux_scripts/music.sh) #[bg=colour3]#[fg=colour1]"
# set -g status-right-length 200

