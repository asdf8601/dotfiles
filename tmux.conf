# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$HOME/.tmux/plugins/tpm/tpm'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
# set-option -g default-shell /bin/zsh
# setw -g mode-mouse on
# set -g utf8
# set-window-option -g utf8 on
# set -g default-terminal "screen"
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm"
set-option -sg escape-time 10

set-option -g status on
set -g status on
# set -g status-utf8 on
# set -g status-interval 5
# set -g status-justify centre

set-option -g status-position top
# Taken from http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# Bind new split commands
bind | split-window -h
bind - split-window -v
bind r source-file ~/.tmux.conf

# alternatively, check file exists before sourcing it in tmux.conf
#if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"
source "$HOME/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"
 # source "~/miniconda3/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"
# source "/home/mgreco/miniconda3/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"
# address vim mode switching delay (http://superuser.com/a/252717/65504)
# set -s escape-time 0

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'
# bind-key s command-prompt -p "send pane to:"    "join-pane -t '%%'"

# !!!  not working commands
# set -g prefix C-a
# bind C-a send-prefix

### .tmux.conf
# set-window-option -g mode-keys vi
setw -g mode-keys vi

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
# vi-style copying
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"

# Import macOS-only config
# if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'

# Borders
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
# set -g pane-active-border-bg white
set -g pane-active-border-bg default

set -g @yank_selection 'primary' # 'primary' or 'secondary' or 'clipboard'
set -g @shell_mode 'vi'
