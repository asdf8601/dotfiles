#!/usr/bin/env bash

deps_file="${DEPS_FILE:-.deps.txt}"
deps_dir="${DEPS_DIR:-$PWD/.deps}"

host=${GITLAB_URI}
token=${GITLAB_TOKEN}

function git_clone() {
    # clone a project
    # deps clone ssh://git@host/parent/subdir/prj

    # underhood does:
    # check if $deps_dir/prj exists if not then
    # git clone $deps_dir/prj if $deps_dir/prj doesn't exists
    url=$1
    dest="$deps_dir/$(basename $url)"

    echo ""
    echo "=== cloning $url into $dest"
    [ ! -d "$dest" ] && git clone $url $dest

}

function git_pull() {
    # clone a project
    # deps pull ssh://git@host.com/parent/subdir/prj
    # deps clone ssh://git@host/parent/subdir/prj

    # underhood does:
    # check if $deps_dir/prj exists if not then
    # git clone ssh://git@host.com/parent/subdir/prj $deps_dir/prj
    url=$1
    dest="$deps_dir/$(basename $url)"

    echo ""
    echo "=== pulling $dest"

    pushd $dest > /dev/null && git pull
    popd
}

function pip_install() {
    url=$1
    dest="$deps_dir/$(basename $url)"

    echo ""
    echo "=== installing $dest"

    pip install -e $dest
}


function pip_wheel() {
    url=$1
    dest="$deps_dir/$(basename $url)"

    echo ""
    echo "=== generating wheel $dest"

    pip wheel -w dist/. $dest --no-deps
}


function checkout_b {
    url=$1
    dest="$deps_dir/$(basename $url)"
    branch=$2

    echo ""
    echo "=== git checkout -b $branch from $dest"
    pushd "$dest" > /dev/null && \
    git checkout -b $branch && \
    popd
}


function checkout {
    url=$1
    dest="$deps_dir/$(basename $url)"
    branch=$2

    echo ""
    echo "=== git checkout -b $branch in $dest"
    pushd "$dest" > /dev/null && \
    git checkout $branch && \
    popd
}


function apply_to_each_dep() {
    # internal function
    func=$1
    shift

    for url in $(cat $deps_file); do
        $func $url $@
    done
}


function add_dep() {

    for dep in $@; do
        echo $dep >> $deps_file
        echo added $dep into $deps_file
    done
}


function cat_deps_file() {
    cat $deps_file
}

function list_deps() {
    ls $deps_dir
}

function rmrf_deps() {
    rm -rf $deps_dir/$1
}


function edit() {
    $EDITOR $deps_file
}


function ignore() {
    echo $deps_file >> .gitignore
    echo `basename $deps_dir` >> .gitignore
}


function search_project() {
    for s in $@; do
        curl -s https://$host/api/v4/search\?scope\=projects\&search\=$s\&private_token=$token\&per_page\=100\&page\=1 \
            | python3 -c "import sys, json; [print(d['id'], d['name'], d['ssh_url_to_repo']) for d in json.load(sys.stdin)]"
    done
}


function search_url_project() {
    for s in $@; do
        curl -s https://$host/api/v4/search\?scope\=projects\&search\=$s\&private_token=$token\&per_page\=100\&page\=1 \
            | python3 -c "import sys, json; [print(d['ssh_url_to_repo']) for d in json.load(sys.stdin)]" \
            | tail -1
    done
}


function echo_help() {
        echo "Usage: deps [cmd] [args]"
        echo
        echo "This script use the following variables to offer funtionality."
        echo "'deps_file=$deps_file' is the file used to manage dependencies through git-url."
        echo "'deps_dir=$deps_dir' is the file where the dependencies will be cloned and installed from."
        echo
        echo "Commands"
        echo "--------"
        echo
        echo "add     : include one o more [dependencies]"
        echo "list    : list all deps in \$DEPS_FILE"
        echo "edit    : open $deps_file in $EDITOR"
        echo "ignore  : add $deps_file and $deps_dir into .gitignore"
        echo "rmrf    : remove deps folder"
        echo "clone   : git clone of all deps into $deps_dir/*"
        echo "pull    : git pull over all deps in $deps_dir/*"
        echo "install : pip install -e . over each deps in $deps_dir/*"
        echo "cob     : git checkout -b [branch] on each $deps_dir/*"
        echo "co      : git checkout [branch] on each $deps_dir/*"
        echo ""
        echo "Note: The commands are governed by '$deps_file'"
}


case $1 in

    search)
        search_project ${@:2} ;;

    search_url)
        search_url_project ${@:2} ;;

    clone)
        apply_to_each_dep git_clone ;;

    pull)
        apply_to_each_dep git_pull ;;

    wheel)
        apply_to_each_dep pip_wheel ;;

    install)
        apply_to_each_dep pip_install ;;

    cob)
        apply_to_each_dep checkout_b $2 ;;

    co)
        apply_to_each_dep checkout $2 ;;

    add)
        add_dep ${@:2} ;;

    cat)
        cat_deps_file ;;

    rmrf)
        rmrf_deps ;;

    list)
        list_deps ;;

    edit)
        edit ;;

    ignore)
        ignore ;;

    * | help | h)
        echo_help ;;
esac
