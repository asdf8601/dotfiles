# Remap C-b by C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
set -g history-limit 30000

set -g default-terminal 'tmux-256color'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'tmux-plugins/tmux-yank'

set -g base-index 1
setw -g pane-base-index 1

# Reload a file when it changes.
# https://unix.stackexchange.com/a/383044
# set -g focus-events oN

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$HOME/.tmux/plugins/tpm/tpm'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g status on
set-option -sg escape-time 10
set-option -g status-position top
set-option -g detach-on-destroy off
set-window-option -g mode-keys vi
setw -g mode-keys vi

set -g mouse on

# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'
# =============================================================================
# share session throught broser
bind-key C-b new-window "gotty tmux attach -t `tmux display -p '#S'`"
bind T split-window -b -p 35 -h -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/todo.md"
bind P split-window -b -h -c "#{pane_current_path}" "nvim +':cd ~/gitlab/mgreco/scrums' +':e latest.md'"
bind G split-window -b -h -c "#{pane_current_path}" "glab issue ls || glab issue ls -R 'COM/com_on/product_backlog'"
bind D split-window -b -h -c "#{pane_current_path}" "nvim ~/.dotfiles"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind i split-window -h -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind r source-file "$HOME/.tmux.conf"
bind -r b select-window -l

# vim-like pane switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# resize vim style
bind -n M-h resize-pane -L 5
bind -n M-l resize-pane -R 5
bind -n M-k resize-pane -U 5
bind -n M-j resize-pane -D 5

# vi-style copying
set -g set-clipboard off
bind-key -n -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -b"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'
set-window-option -g mode-keys vi
# bind-key -T copy-mode-vi C-\ select-pane -l
# set -g @yank_selection 'clipboard' # 'primary' or 'secondary' or 'clipboard'

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'
bind C-x setw synchronize-panes

# I prefer default behaviour which allows you list all servers and select them
# bind-key s command-prompt -p "send pane to:"    "join-pane -t '%%'"

### .tmux.conf
# unbind p
# bind p paste-buffer


# set -g status-style 'bg=#333333 fg=#5eacd3'
# due to vim-navigator we lost ctlr-l for clean terminal output below command recover it.
# bind C-l send-keys 'C-l'

# ============================================================================
# aspect

set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour231,bg=colour31"
set -g status-right-style "none"
# set -g pane-active-border-style "fg=colour254"
set -g status-style "none,bg=colour234"
set -g message-style "fg=colour231,bg=colour31"
# set -g pane-border-style "fg=colour240"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=colour250,bg=colour234"
set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour252] #h "
setw -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour250,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour117,bg=colour31] #I #[fg=colour231,bg=colour31,bold] #W #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# SET ACTIVE-INACTIVE WINDOW STYLES
# https://tech.serhatteker.com/post/2019-06/tmux-focus/
# https://github.com/tmux/tmux/issues/1325#issuecomment-490566190
set-window-option -g window-active-style bg=terminal
set-window-option -g window-style        bg=black

# Pane border
set -g pane-border-style bg=black
set -g pane-border-style fg=colour235

# Active pane border
set -g pane-active-border-style bg=colour247
set -g pane-active-border-style fg=colour235
