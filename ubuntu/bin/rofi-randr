#!/usr/bin/env zsh
#!/usr/bin/env zsh

typeset XRANDR_TXT
typeset -A OUTPUT_CONFIGURED

function main() {
  local -i iteration
  local max_iteration
  local output
  local mode
  local position
  local xrandr_cmd

  environment_check

  max_iteration=${(w)#OUTPUT_CONFIGURED}
  xrandr_cmd='xrandr'

  while ! all_outputs_configured && (( $iteration <= $max_iteration )); do
    if (( iteration++ )); then
      select_output 'Select next output:' 'unconfigured' | read output
      select_position "${output}" | read position
      [[ "${position}" != '--off' ]] && select_mode "${output}" | read mode
      OUTPUT_CONFIGURED[${output}]='true'
    else
      select_output 'Select primary output:' 'all' | read output
      select_mode "${output}" | read mode
      OUTPUT_CONFIGURED[${output}]='true'
      position='--primary'
    fi
    xrandr_cmd+=" --output ${output} ${position} ${mode}"
  done

  ${=xrandr_cmd}
}

function select_output() {
  local -a menu
  local output

  case "$2" in
    'configured') menu=(${(k)OUTPUT_CONFIGURED[(I)true]});;
    'unconfigured') menu=(${(k)OUTPUT_CONFIGURED[(I)false]});;
    'all') menu=(${(k)OUTPUT_CONFIGURED}) ;;
    *) return 257 ;;
  esac

  case ${#menu} in
    0) return 259 ;;
    1) echo "${menu}" ;;
    *) echo ${(F)menu} | rofi -dmenu -i -matching fuzzy -l 10 -p "$1";;
  esac
}

function select_position() {
  local anchor
  local selection

  [[ -z $1 ]] && return 257

  select_output "Set $1 relative to:" 'configured' | read anchor
  [[ $? -eq 257 ]] && return 259

  echo "off
above ${anchor}
below ${anchor}
left of ${anchor}
right of ${anchor}
mirror ${anchor}" | rofi -dmenu -i -matching fuzzy -l 10 -p "Select position of $1:" | read selection

  case "${selection[(w)1]}" in
    left) echo "--left-of ${anchor}" ;;
    right) echo "--right-of ${anchor}" ;;
    above) echo "--above ${anchor}" ;;
    below) echo "--below ${anchor}" ;;
    mirror) echo "--same-as ${anchor}" ;;
    off) echo "--off" ;;
    *) return 258 ;;
  esac
}

function select_mode() {
  local menu
  local selection

  if [[ -z $1 ]] && return 257

  menu="$(echo "${XRANDR_TXT}" \
    | sed -n '/^'$1' /,/^[^ ]/ s/ * //p' \
    | grep -o '[0-9]*x[0-9]*' \
    | cat <(echo auto) -)"

  echo "${menu}" | rofi -dmenu -i -matching fuzzy -l 10 -p "Select mode for $1:" | read selection

  case "${selection}" in
    'auto') echo '--auto' ;;
    *x*) echo "--mode ${selection}" ;;
    *) return 258 ;;
  esac
}

function all_outputs_configured() {
  [[ -z ${(k)OUTPUT_CONFIGURED[(I)false]} ]]
}

function environment_check() {
  for cmd in cat grep xrandr rofi xset; do
    if ! command -v $cmd &>/dev/null; then
      echo "You need to install $cmd to use this script." >&2
      exit 255
    fi
  done
}

function initialize_globals() {
  XRANDR_TXT="$(xrandr)"
  OUTPUT_CONFIGURED=($(grep ' connected' <<< "${XRANDR_TXT}" | cut -d ' ' -f 1))
  for output in ${(k)OUTPUT_CONFIGURED}; do
    OUTPUT_CONFIGURED[${output}]='false'
  done
}

initialize_globals
readonly XRANDR_TXT
main

# End

