matches:

  - trigger: ";gpt-pr"
    replace: "I want a summary for a PR body so you should describe the modifications made as shown in this git diff. Provide a summary of significant changes. Keep the description straightforward and use basic language. Avoid complex terminology. Return a markdown formatted text."

  - trigger: ";edit"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "xdotool key ctrl+a && sleep 0.1 && xdotool key ctrl+x && sleep 0.1 && /home/mgreco/.local/bin/pbpaste > /tmp/espanso-nvim.txt && xterm -e zsh -c 'source ~/.profile && source ~/.zshrc && nvim /tmp/espanso-nvim.txt' && cat /tmp/espanso-nvim.txt"

  - trigger: ":setup:"
    replace: "apt update -qq && apt install -qq -y curl && curl -#fLo- 'https://gist.github.com/mmngreco/ef7af0db1a9a70c0c73337f5788b0072/raw/setup-container.sh' | sh"

  - trigger: ":toma:"
    replace: https://media.giphy.com/media/ejJclNX60XyEo555wW/giphy.gif

  - trigger: ":crying:"
    replace: https://media.giphy.com/media/gjZUmIYSb6bacxzVh2/giphy.gif

  - trigger: ":rolling:"
    replace: https://media.giphy.com/media/lcySndwSDLxC4eOU86/giphy.gif

  - trigger: ":NOOO:"
    replace: https://giphy.com/clips/theoffice-lkibHaGO1xmJXapEdq

  - trigger: ":letsdothis:"
    replace: https://media.giphy.com/media/BpGWitbFZflfSUYuZ9/giphy.gif

  - trigger: ":apatico:"
    replace: https://media.giphy.com/media/BY8ORoRpnJDXeBNwxg/giphy.gif

  - trigger: ":dance:"
    replace: https://media.giphy.com/media/l0amJzVHIAfl7jMDos/giphy.gif

  - trigger: ":itstrue:"
    replace: https://media.giphy.com/media/dXFKDUolyLLi8gq6Cl/giphy.gif

  - trigger: ":tbd:"
    replace: https://media.giphy.com/media/VmcGXVrh4dHFfjQzrI/giphy.gif

  - trigger: ":awkward:"
    replace: https://media.giphy.com/media/4ZMsXG1uh6cZTo1F9Y/giphy.gif

  - trigger: ":warmup:"
    replace: https://media.giphy.com/media/Yz0Gp8s9jKqRy/giphy.gif

  - trigger: ";zen"
    replace: "{{quote}}"
    vars:
      - name: quote
        type: shell
        params:
          cmd: "zen"

  - trigger: ";lannister"
    replace: "{{quote}}"
    vars:
      - name: quote
        type: shell
        params:
          cmd: "lannister"

  - trigger: ";stoic"
    replace: "{{quote}}"
    vars:
      - name: quote
        type: shell
        params:
          cmd: "stoic"

  - trigger: ":>h:"
    replace: "> # @today "

  - trigger: ":>hh:"
    replace: "> ## @today "

  - trigger: ":h:"
    replace: "# @today "

  - trigger: ":hh:"
    replace: "## @today "

  - trigger: ";chat;"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "/home/mgreco/.local/bin/pbpaste | sed 's/;chat;//' | espanso_gpt"

  - trigger: ";trad;"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "/home/mgreco/.local/bin/pbpaste | sed 's/;trad;//' | espanso_gpt_trad"

  - trigger: ";fix;"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "/home/mgreco/.local/bin/pbpaste | sed 's/;fix;//' | espanso_gpt_fix"

  - trigger: ":retro:"
    replace: "1. Max üî¥üü°üü¢\n    - üîÅ \n    - ‚úÖ \nüß©üß© "

  - trigger: ";draft"
    replace: "---\ntitle: \"$|$\"\ndate: {{date}}\ndraft: false\ncategories: []\nlabels: []\n---\n\n"
    vars:
      - name: date
        type: match
        params:
          trigger: ":date:"

  - trigger: ";today"
    replace: "/heading 3\n@Today \n"


  - trigger: ";uuid"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "python3 -c 'import uuid; print(uuid.uuid4())'"

  - trigger: ";py"
    replace: |-
      import pandas as pd
      import numpy as np
      from rich import print

  - trigger: ";px"
    replace: |-
      import plotly.express as px
      px.scatter(df, x="", y="")
      px.line(df, x="", y="")

  - trigger: ";plt"
    replace: |-
      from matplotlib import pyplot as plt
      plt.show()

  - trigger: ";cp"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "xdotool key ctrl+a && xdotool key ctrl+c"

  - trigger: ";pass"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: "python3 ~/.local/bin/passgen"

  - trigger: ";myip"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "curl 'https://api.ipify.org'"

  - trigger: ";details"
    replace: |-
      <details><summary>Click to expand</summary>

      </details>

  - trigger: ";fold"
    replace: |-
      <details><summary>Click to expand</summary>

      </details>

  - trigger: ";Date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%A %Y-%m-%d"

  - trigger: ";date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d"

  - trigger: ";time"
    replace: "{{time}}"
    vars:
      - name: time
        type: date
        params:
          format: "%H:%M"

  - trigger: ";month"
    replace: "{{date}}"
    vars:
      - name: date
        type: date
        params:
          format: "%B %Y"

  - trigger: ";a"
    replace: "{{out}}"
    vars:
      - name: out
        type: shell
        params:
          cmd: 'echo "<a href=\"$(pbpaste)\" /></a>"'

  - trigger: ";code"
    replace: |-
      ```python
      # code
      ```

  - trigger: ";mmd"
    replace: |-
      ```mermaid
      flowchart LR

      a --> b
      ```

  - trigger: ";dot"
    replace: |-
      graph {
        rankdir=LR;
        a -- b -- c
      }

  - trigger: ":linestyle:"
    replace: linkStyle default interpolate basis


  - trigger: ";toml"
    replace: |-
      [build-system]
      requires = ["setuptools", "setuptools-scm"]
      build-backend = "setuptools.build_meta"

      [project]
      name = "my_package"
      authors = [
          {name = "Josiah Carberry", email = "josiah_carberry@brown.edu"},
      ]
      description = "My package description"
      readme = "README.rst"
      requires-python = ">=3.8"
      keywords = ["one", "two"]
      license = {text = "BSD-3-Clause"}
      classifiers = [
          "Framework :: Django",
          "Programming Language :: Python :: 3",
      ]
      dependencies = [
          "requests",
          'importlib-metadata; python_version<"3.10"',
      ]
      dynamic = ["version"]

      [project.optional-dependencies]
      pdf = ["ReportLab>=1.2", "RXP"]
      rest = ["docutils>=0.3", "pack ==1.1, ==1.3"]

      [project.scripts]
      my-script = "my_package.module:function"
